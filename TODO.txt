

Tine TODO

Software:

	!!! DO NOT CHANGE list:
		-- RECORD TOGGLE's glyph and ERASE WHILE HELD's chord need to conflict, so that the file.sync() on ERASE WHILE HELD's key-up doesn't get skipped when toggling
			-- if the key-chord for ERASE WHILE HELD is changed, then the file.sync() call in unassignKey() must also be changed

	. prove I'm not a dipshit: actually finish the project

	-- set the default GRIDCONFIG back to 0

	. is tempo actually being clocked at the right speed?
		. test with a MIDI-IN apparatus that measures actual BPM from TEMPO ticks
			--
		. if yes, then:
			. should the global cue have 256 rather than 128 16th-notes, to be more useable at tempos above ~120?

	. test the new manual-duration system:
		. does it work straightforwardly?
			-- no: note-offs aren't being sent on key-release, and are only being sent on duration-timeout
			. figure out what's up
				-- modKeyPitch() had badly-ordered args in some calls. brought them in line with standard [col, row] ordering
				. re-test
					-- still having the same bug, somehow.
					. figure it out
						-- unassignKey() needs to subtract 1 from "col" before it works correctly in modKeyPitch(). fixed
		. does it cooperate with auto-durations?
			-- seems to
		. does mashing of multiple keys in manual-mode have the expected outcome? (many tiny notes plus one regular note for the last button hit)
			-- seems to
		. does it cooperate with REPEAT?
			-- notes with manual-duration are triggered on REPEAT ticks as though they have a duration of 128. this is wrong
			. figure out what's going on
				-- in processRecAction(), when RECORDNOTES wasn't armed, regular NOTE-ONs were playing with a duration of "DURATION" rather than "QUANTIZE"...
				-- ...this has now been fixed
		. does it record into a sequence coherently?
			-- yes
			. do clusters of keymashes also record into sequences coherently?
				-- seem to
			. does REPEAT-mode still record notes into sequences coherently?
				-- seems to
				. what about when DURATION is in manual-mode? do notes have the default QUANTIZE value for their duration when recorded?
					-- seem to
		. does hitting a control-column key cut off the held note-button?
			-- yes
			. does its note get recorded only when RECORDNOTES is armed, and not any other time?
				-- yes
			. do notes get cut off and recorded after becoming 128 ticks long, only when RECORDNOTES is toggled?
				-- yes
		. does mode-toggle cut off the held note-button and record its note?
			-- this is a subset of "hitting a control-column key", so logically absolutely yes

	. test changes to the timing system
		-- doing
	. is the newly-moved BPM-glyph still displaying right?
		-- yes
	. re-test the SUSTAIN and MOUT systems:
		-- am doing
		. percussion usage-case
			-- is not sending recorded notes for some reason
			. figure it out
				-- fixed: the second while-loop in removeDuplicates() was removing the MOUT-queue entry for the note it was checking
		. synth usage-case:
			. sustains
				--
			. chords
				--
			. z-fighting
				--
		. overloaded usage-case
			--
		. special case: multiple duplicate notes on the same tick:
			. in RECORD MODE:
				. same note on both TRACKs
					--
			. in PLAY MODE:
				. same note in two separate seqs
					--
				. same note on both tracks, in multiple separate seqs
					--

	. test REPEAT-SWEEP
		--
	. test recordable SWING-commands
		--
	. test REPEAT-SWEEP on:
		. recorded regular MIDI commands
			--
		. recorded special MIDI commands
			--
		. recorded BPM commands
			--
		. recorded SWING commands
			--

	. re-test all recording mechanisms
		--
		. note-recording
			. TRACK 1
				--
			. TRACK 2
				--
		. ERASE WHILE HELD
			. TRACK 1
				--
			. TRACK 2
				--
		. CLEAR SEQ
			. clears both tracks simultaneously?
				--
		. COPY/PASTE
			. straightforward standard usage
				--
			. with COPY size too long for PASTE size (should be discarded)
				--
			. with COPY size too short for PASTE size (should repeat until the end of the PASTE area)
				--
			. with COPY in another sequence than PASTE
				--

	. remove the PLAYING var, and the GLOBAL PLAY/STOP mechanism
	. instead of toggling PLAYING on or off, introduce a RESET TIMING command. this should:
		. reset GLOBAL CUE
		. reset all seq-positions
		. NOT reset all pending cues (would be more useful this way, in weird performance-cases)
		. send a CLOCK STOP command
		. send a SONG-POSITION POINTER
		. send a CLOCK START command
			. plus a dummy-CLOCK-tick? research this again
	. is resetAllSeqs() even necessary at this point?

	. reassign the RECORD-MODE control-commands to make logical sense around the new BPM keychord
		. change button-key.txt:
			. RECORD, REPEAT, and TRACK should be conceptually connected
			. CHAN and UPPER-CHAN should be conceptually connected
			. OCTAVE, VELOCITY, DURATION, HUMANIZE, and QUANTIZE should be conceptually connected
		. change KEYTAB array
		. change RECORD-MODE GUI routines

	. re-test things
		. various QUANTIZE settings
		. are old notes being knocked out of the sequence by new notes in RECORD-MODE properly?
		. test SEQ-SIZE behavior
		. test CC/PC/other advanced MIDI commands
		. test entering CC/PC/other advanced MIDI commands with REPEAT-SWEEP active
		. test file-load
		. test auto-loading of most recent savefile on startup
		. test that the number of the savefile is displayed correctly on startup
			. also for savefiles in file-slots >= 100

	. does HUMANIZE apply to REPEAT notes correctly?

	. re-test all cue-commands
		. OFF
		. CUE
		. SLICE
		. CUE (with SLICE-offset insertion)
		. CUE OFF
		. PAGE OFF
		. SCATTER (amount)
		. SCATTER UNSET
		. PAGE SCATTER UNSET
		. double-pressed commands, of the same or different types, to check for unexpected behaviors

	. test gesture system
		. test LOAD-MODE TOGGLE
		. test GLOBAL PLAY/STOP TOGGLE

	. test LOAD MODE fully:
		. check toggling into/out of LOAD MODE from both PLAY MODE and RECORD MODE
			. PLAY MODE:
				. check toggling LOAD MODE when seqs are playing
				. check toggling LOAD MODE when seqs have active cued-commands
			. RECORD MODE:
				. check toggling LOAD MODE when RECORDNOTES is armed / when REPEAT is active / both
		. check that all possible edge-case sequences on all pages load correctly

	. test MIDI-IN (notes)
		. are notes recorded correctly in RECORD-MODE?
		. are notes recorded only when RECORDNOTES is armed?
		. make sure that notes are not erroneously recorded when PLAY MODE or LOAD MODE is active
			. especially after toggling into LOAD MODE from RECORD MODE with RECORDNOTES armed
	. test MIDI-IN (clock)
		. does it synchronize correctly with other clocked gear, without jumping forward or behind by a tick? (test at very low tempo)
			. ...when receiving CLOCK?
			. ...when sending CLOCK to other gear?

	. check whether sequences function correctly with non-multiple-of-2 lengths, under all RECORD MODE and PLAY MODE processes
	. check that, when a deeper savefile is loaded and is running many complex sequences, there's no extra lag for whatever reason
	. look at all note-recording routines again, to triple-check for any stupid mistakes that would lead to unnecessary wear
	. double-check that the BPM rate is actually accurate at various speeds
	. fill 12 sequences with notes, and check whether lag occurs when connected to a hardware synthesizer
	. does anything catastrophic happen when the SD-card is removed during regular operation?

	==== SOFTWARE BETA THRESHOLD ====

	. when the OFF button is used to wipe the cues from a cued seq, does that cued seq refrain from any activity correctly?
		. if a new cue is set for the same seq, as the seq's first action after such a situation, then does the cue act as expected?

	. when two note-buttons are simultaneously held during ARMED RECORDING, are they recorded simultaneously?
		. what if more than two are held?
		. what if they're CONTROL-CHANGES?
			. two held?
			. more than two?
		. what if they're PROGRAM-CHANGES?
			. two held?
			. more than two?

	. do very slow BPMs have the expected tick-length?
	. test whether very fast BPMs have any lag

	. gestures sometimes have a sloppy response. figure out why

	. double-check all functionality for sequences on the second-page

	. edge-case testing:
		. does RECORD MODE work right:
			. when the sequence is loaded with SCATTERs and CUEs?
			. in MIDI FOLLOW mode?
			. for sequences with a weird tempo/slice offset from the global cue?

	. survey all TO_UPDATE calls, for superfluous flags

	. add SONG POSITION POINTER functionality while in CLOCK FOLLOW mode, to orient the global cue-position correctly?

	. re-test problem areas:
		. GLOBAL PLAY/STOP
		. MIDI-IN
		. GLOBAL PLAY/STOP under conditions of complex MIDI-IN

	. very rarely, the tempo will be far too fast upon power-up. figure out why

	. double-check that there are no remaining "todo" or "test" comments in the codebase
	. remove "THIS CODE IS UNDER DEVELOPMENT AND DOESN'T DO ANYTHING" from license-statement
	. double-check that everything compiles correctly in the latest version of Arduino
	. test overloading the 8-events-per-tick system
	. test overloading the SUSTAIN system with simultaneous sequencing and notes-from-RECORD-MODE
	. test overloading the MIDI-IN system
	. soak-test the physical prototype

	. add a note to tutorials on wear-leveling:
		. extreme repetitive use of PASTE or CLEAR will lead to faster card degradation

	. research how to back-up the contents of the SD-card in a manner that recombines the savefiles without losing their contiguous nature
		-- files could be copied off the disk manually, and then transferred back onto the disk file-by-file using XVI32 to paste their contents into blank files
		-- files could be copied en masse as a disk-image, and then reapplied en masse with a disk-imager
			. write a tutorial on both of these methods

	. tutorial section for COPY/PASTE:
		. note that mashing PASTE constantly will accelerate SD-card wear
		. variable COPY size
		. variable PASTE size

Hardware:

	. clear/clean/update todo tasks
		--

	. check sizes of the pin-holes for the B3F-5050 buttons, and if they're too small, slightly widen them to compensate for kerf. (just remembered that these were too tight on the alpha prototype)
		--

	. update KiCad/Inkscape files:
		. both boards:
			. use connection-labels in the schematic, instead of having to make tangles of connections. faster revisions & reduces chance of overlooked errors
				-- am using this process now
			. move DC-IN jack and MIDI-ports to bottom-board
				-- done
				. change edge-cuts for both boards to accomodate the new DC-IN jack position
					-- done
			. add extra kerf to standoff-holes, to compensate for standoff screws always being slightly over-size due to their threading
				-- done: increased from 2.5mm to 2.75mm
			. change all stacking headers to occupy a 2x20 horizontal row between the buttons and LEDs, to make the assembly process less fragile
				. do this in schematic
					-- done
				. do this in PCBs
					. top-board
						-- done
					. bottom-board
						--
			. make sure stacking-headers have the same pin-positions, signifying the same pin-contents (keeping in mind that the top-board's header is reversed)
				--
			. move model-number text to bottom-board - if it were still on the top-board, any sort of transparent plexiglas would make it look tacky
				--
				. model-number text should be in the following format:
					. basilisk tine sequencer
					  production run number - production run name
			. make sure all edge-cuts reflect the rearrangement of ports/standoffs
				--
			. add edge-cuts to top-board for all electrolytic capacitors on the bottom-board
				-- done
				. double-check that the capacitors in the parts-list are actually slim enough to fit into this space
					--
			. double-check that ports aren't competing for space with standoffs
		. bottom-board:
			. update R-SET resistor's value based on the new diffused LEDs
				--
			. double-check all pin assignments on both regulators, comparing datasheets directly to footprints
				--
			. place thermal-plates that accomodate new smaller heatsinks
			. remember to include screw-holes inside the thermal-plates (these may be part of the regulators' footprints)
			. place all capacitors beneath edge-cuts, so they have enough room to stand
			. place shrouded AVR-ISP jack on the back-left edge of the bottom-board, under the same edge-cut as the capacitors
			. SD-card should be in the center of the front-panel
			. double-check the SD-card's footprint against its datasheet (its stabilization-holes were kind of wonky on the alpha prototype)
			. individually label the pins on the "MIDI-EXPANDER" header
			. move POWER-LED to center of bottom-board, and use a high-brightness white LED with a very wide visibility-cone
		. top-board:
			. remember to include edge-cuts for: the MIDI ports, the electrolytic capacitors, and the AVR-ISP port

	. double-check that the text diagrams in button-key.txt accurately reflect the finalized LED-placement

	. make a list of every part needed for the prototype, with each part's specific part-number (both manufacturer and distributor)
		. 2mm LED-standoffs
		. regular standoffs for circuit-boards, and associated screws
		. longer screws for the two top-back screw-holes, since these will have several additional layers of enclosure to cover the MIDI ports
		. small screws and nuts, for securing the heatsinks to the regulators and their underlying circuit-board
		. 5v regulator: L7805ABV
		. 3.3v regulator:
		. heatsinks for TO-220-shaped regulators!
		. B3F-5050 buttons (these have a longer life than B3F-4050 buttons)
			. use different-color button-caps on the note-keys, to differentiate between "white notes" and "black notes" like on a piano
			. use different button-cap color for control-row?
		. electrolytic capacitors: 5mm width, 2.5mm pin-width
		. 20pF capacitors: SR211A200JAR (5.08mm length)
		. 0.1uF capacitors: K104K15X7RF53H5 (5mm length)
		. resistors!
		. LEDs:
		. LSET-resistor:
		. 16Mhz crystal oscillator: FOXSLF/160-20e ("C4ST", formerly HC49SLF) (11.35mm length, 4.65mm width)
		. look into power-cables with a right-angle plug, since the DC-power port has been moved to the left side
		. ATMEGA328P-PU chips, /not/ ATMEGA328-PU chips. only ATMEGA328P-PU can be easily reprogrammed by the end-user
			. get these from DigiKey, using the "preprogrammed chip" service, to make sure the preprogrammed-bootloader-and-firmware process works
		. sockets!
		. grounding-bracelets, to use while soldering beta prototypes, and while assembling finished units
		. "industrial-grade" SD-cards: these will greatly lengthen the SD-card's wear-leveling life to something a user would be okay with
			. something like "1GB THEMIS-A" in here: http://www.psism.com/industrialsd.htm
			. sdfat /should/ support the FAT16 filesystems of the smaller THEMIS cards, but make sure this is indeed the case
			. when ordering these, make sure that the SD-cards are shipped in a state identical to what results from the SD Association formatter utility
		. look into sticky rubber spacers for the bottom of the device, to keep its screws from scraping on things and being worn down
		. make entries for all other parts

	. redo all Inkscape files for enclosure, making sure to retake all measurements & repeat the KiCad-to-Inkscape vector paste process
		. make the tabs and slots for the bottom half of the side-panels the correct width for the plexiglass
		. tabulate the heights of all internal components, to figure out how many layers of plexiglass need to go into the "bump" above the MIDI-ports

	==== HARDWARE BETA THRESHOLD ====

	. make sure that you order the ATMEGA chips with the proper bootloader fuse config (along with the firmware), or else they will be 8 times too slow and incapable of sending MIDI
		. buy a test-batch that are preprogrammed in such a way, and slot one into a Tine beta unit for testing

	. stress-test both MIDI-INDICATOR LEDs simultaneously, with heavy simultaneous IN/OUT signals (with OUT plugged into two devices), and with the main LED-screen fully illuminated, to make sure the unit isn't prone to brownouts
		. if brownout does occur, then increase the uF value on the 5v regulator-assembly's capacitors

	. if working with an SD-card distributor: get a copy of the authorization letter that certifies the relationship with the brand they're selling
		. also: get the upstream brand to confirm the distribution relationship
	. make sure to buy extra SD-cards in case people need replacements

	. order all parts by copy-pasting part-names from the master parts-list, to avoid mental errors (like missing the inner second "P" in "ATMEGA328P-PU")

	. every unit should have its own serial-number written onto a sticker somewhere on its circuit-board

Packaging:

	. look into services that create custom-printed, custom-sized cardboard boxes
		. any DIY kits will have to be sealed tightly so parts don't escape during transport
			. will just have to use plastic baggies for this probably
				. look into bulk suppliers for non-static plastic baggies
		. fully-assembled units won't need baggies, but will still need a way to retain loose elements (stickers, manual, et al)

	. look into custom stickers and various other goodies
