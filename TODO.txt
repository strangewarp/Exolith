

Tine TODO

Software:

	!!! DO NOT CHANGE list:
		-- RECORD TOGGLE's glyph and ERASE WHILE HELD's chord need to conflict, so that the file.sync() on ERASE WHILE HELD's key-up doesn't get skipped when toggling

	. prove I'm not a dipshit: actually finish the project

	-- fixed a glyph-display error for PLAY MODE's BPM command

	. in PLAY MODE, BPM conflicts with CUE-OFF
		. this means:
			. the PLAY MODE section of button-key.txt is actually reversed, except for the "BPM" entry. fix it
				-- done
			. the BPM command needs to be mirrored to (top-down) 100010
				-- am doing
				. update CmdFunc system for this
					-- done
				. update GUI routines for this in PLAY MODE and RECORD MODE
					-- done
			. the QRESET command, which takes up (top-down) 100010 in RECORD MODE, needs to be moved to (top-down) 010010
				-- am doing
				. update CmdFunc system for this
					-- done
				. update GUI routines for this in RECORD MODE
					-- done

	. test: do the reworked QUANTIZE and BPM commands work right?
		-- 
	. has OFF CUE 0 been freed up correctly?
		-- 

	. test changes:
		. is BLINK affected by the active TRACK in RECORD MODE?
			-- yes
		. do QUANTIZE and QRESET both work correctly...
			. in the GUI?
				-- yes
			. in regular note-entry?
				-- 
			. in REPEAT-based note-entry?
				-- 
		. does REPEAT record held chords, but with recording otherwise acting monophonically?
			-- 
		. how many notes are actually played when more than 2 are held with REPEAT active?
			-- 

	. on every NOTE-ON, look through the SUSTAIN system for the same note on the same channel, and if it is present, send a NOTE-OFF before the NOTE-ON
	. (this will allow certain synths to obey conflicting QUANTIZE and DURATION settings without wigging out)
		-- 

	. mystery crash after allowing RECORD MODE to sit for a while. figure out what it is
		-- no idea. hopefully the recent increase in free RAM will stop this type of weird event from happening

	. re-test all recording mechanisms
		-- am doing
		. note-recording
			. TRACK 1
				-- 
			. TRACK 2
				-- 
		. ERASE WHILE HELD
			. TRACK 1
				-- 
			. TRACK 2
				-- 
		. CLEAR SEQ
			. clears both tracks simultaneously?
				-- 
		. COPY/PASTE
			. straightforward standard usage
				-- 
			. with COPY size too long for PASTE size (should be discarded)
				-- 
			. with COPY size too short for PASTE size (should repeat until the end of the PASTE area)
				-- 
			. with COPY in another sequence than PASTE
				-- 

	. reassign the RECORD-MODE control-commands to make logical sense around the new BPM keychord
		. change button-key.txt:
			. RECORD, REPEAT, and TRACK should be conceptually connected
			. CHAN and UPPER-CHAN should be conceptually connected
			. OCTAVE, VELOCITY, DURATION, HUMANIZE, and QUANTIZE should be conceptually connected
		. change KEYTAB array
		. change RECORD-MODE GUI routines

	. re-test things
		. various QUANTIZE settings
		. are old notes being knocked out of the sequence by new notes in RECORD-MODE properly?
		. test SEQ-SIZE behavior
		. test CC commands
		. test file-load
		. test auto-loading of most recent savefile on startup
		. test that the number of the savefile is displayed correctly on startup
			. also for savefiles in file-slots >= 100

	. does HUMANIZE apply to REPEAT notes correctly?

	. re-test all cue-commands
		. OFF
		. CUE
		. SLICE
		. CUE (with SLICE-offset insertion)
		. CUE OFF
		. PAGE OFF
		. SCATTER (amount)
		. SCATTER UNSET
		. PAGE SCATTER UNSET
		. double-pressed commands, of the same or different types, to check for unexpected behaviors

	. test gesture system
		. test LOAD-MODE TOGGLE
		. test GLOBAL PLAY/STOP TOGGLE

	. look at all note-recording routines again, to triple-check for any stupid mistakes that would lead to unnecessary wear

	. double-check that the BPM rate is actually accurate at various speeds

	. fill 12 sequences with notes, and check whether lag occurs when connected to a hardware synthesizer

	. does anything catastrophic happen when the SD-card is removed during regular operation?

	==== SOFTWARE BETA THRESHOLD ====

	. fork the codebase:
		. original fork is for the alpha-prototype hardware ONLY
		. new fork is for the beta-prototype hardware ONLY
	. breadboard the beta-prototype
	. update the new fork for the beta-prototype
		. will have shared SPI pins for MAX7219 (see "Hardware" tasks)
		. will have a "safe-shutdown" circuit (see "Hardware" tasks)

	. write a minimal alternate firmware to test SD-card lifespan, using an expendable normal SD-card
		. needs to record number of writes to a given block
		. needs to record number of errors within that block
		. needs to store wear-data within a different block, to prevent corruption of record-keeping

	. when the OFF button is used to wipe the cues from a cued seq, does that cued seq refrain from any activity correctly?
		. if a new cue is set for the same seq, as the seq's first action after such a situation, then does the cue act as expected?

	. does BPM change the savefile correctly?
		. is it loaded in correctly, on startup, after being changed by the user?

	. when two note-buttons are simultaneously held during ARMED RECORDING, are they recorded simultaneously?
		. what if more than two are held?
		. what if they're CONTROL-CHANGES?
			. two held?
			. more than two?
		. what if they're PROGRAM-CHANGES?
			. two held?
			. more than two?

	. do very slow BPMs have the expected tick-length?
	. test whether very fast BPMs have any lag

	. make sure that, when a deeper savefile is loaded, there's no extra lag for whatever reason

	. gestures sometimes have a sloppy response. figure out why

	. if lag-reduction is necessary...
		. try moving the MAX7219 onto the SPI pins and using a homebrew variant of LedControl_HW_SPI
		. make sequences monophonic?
		. limit maximum BPM to 160?
		. change max note-granularity to 8th-notes?
		. remove MIDI CLOCK?
		. remove MIDI IN?
		. remove or greatly simplify SCATTER system?

	. test MIDI-IN (notes)
	. test MIDI-IN (clock)
		. add a "DO NOT SEND CLOCK SIGNALS" user-flag to the CLOCK MASTER/FOLLOW mechanism?

	. double-check all functionality for sequences on the second-page

	. edge-case testing:
		. does RECORD MODE work right:
			. when the sequence is loaded with SCATTERs and CUEs?
			. in MIDI FOLLOW mode?
			. for sequences with a weird tempo/slice offset from the global cue?

	. survey all TO_UPDATE calls, for superfluous flags

	. check whether sequences can actually function with non-multiple-of-2 lengths

	. add SONG POSITION POINTER functionality while in CLOCK FOLLOW mode, to orient the global cue-position correctly?

	. add a command to shift the position of the global cue-point?

	. add a command to change the global cue-point's granularity? (e.g. being 3 beats, or 7 beats, instead of 8 beats, and ignoring the extra LEDs)

	. re-test problem areas:
		. GLOBAL PLAY/STOP
		. MIDI-IN
		. GLOBAL PLAY/STOP under conditions of complex MIDI-IN

	. create a testing apparatus in Pdlua, or something, to double-check that all command-types are correctly-formed:
		. when the command is played manually
		. when the command is played back from the savefile, during the sequencing routine

	. very rarely, the tempo will be far too fast upon power-up. figure out why

	. double-check that there are no remaining "todo" or "test" comments in the codebase
	. remove "THIS CODE IS UNDER DEVELOPMENT AND DOESN'T DO ANYTHING" from license-statement
	. double-check that everything compiles correctly in the latest version of Arduino
	. test overloading the 8-events-per-tick system
	. test overloading the SUSTAIN system with simultaneous sequencing and notes-from-RECORD-MODE
	. test overloading the MIDI-IN system
	. update "VERSION_TEXT" to "1"
	. soak-test the physical prototype

	. add a note to tutorials on wear-leveling:
		. extreme repetitive use of PASTE or CLEAR will lead to faster card degradation

	. research how to back-up the contents of the SD-card in a manner that recombines the savefiles without losing their contiguous nature
		-- files could be copied off the disk manually, and then transferred back onto the disk file-by-file using XVI32 to paste their contents into blank files
		-- files could be copied en masse as a disk-image, and then reapplied en masse with a disk-imager
			. write a tutorial on both of these methods

	. tutorial section for COPY/PASTE:
		. note that mashing PASTE constantly will accelerate SD-card wear
		. variable COPY size
		. variable PASTE size

Hardware:

	. figure out how to stabilize the LEDs while soldering, so their wobbly resin base doesn't set them at slight angles
		. should each LED just have a very short standoff? (2mm-ish?)

	. test a new MIDI port setup:
		. no MIDI-THRU! (feature would be too rarely used, on this particular kind of device)
		. 1x MIDI-IN + indicator LED
		. 2x MIDI-OUT + indicator LED
			. research how many milliamps the standard MIDI-OUT connection uses, to prevent the possibility of frying power components

	. use "industrial-grade" SD-cards, to greatly lengthen the SD-card's wear-leveling life to something a user would be okay with
		. something like "1GB THEMIS-A" in here: http://www.psism.com/industrialsd.htm
		. sdfat /should/ support the FAT16 filesystems of the smaller THEMIS cards, but make sure this is indeed the case
	. make sure that the SD-cards are shipped in a state identical to what results from the SD Association formatter utility

	. double-check that the indicators have protection-diodes and protection-resistors on them
		. protection-resistors in front of each first transistor's base terminal
		. protection-diodes between the MIDI data-lines and the first protection-resistors

	. test MIDI-IO LED circuit with 0.1uF & 1uF capacitors
		. or with 1k/10k resistor from cap+ to GND
		. if it's as bright as the current kind, then: change KiCad schematics & PCBs & Mouser order to reflect this

	. if still using current standoff lengths, then MIDI ports will require another mm of vertical space
		. therefore: put 1mm-thick spacers on every standoff and compensate for this in all side-panel sizes accordingly

	. update KiCad/Inkscape files:
		. both boards:
			. use connection-labels in the schematic, instead of having to make tangles of connections. faster revisions & reduces chance of overlooked errors
			. move DC-IN jack to bottom-board
				. change edge-cuts for both boards to accomodate the new DC-IN jack position
			. change standoff hole-sizes to M3, plus extra kerf to compensate for standoff screws always being slightly over-size due to their threading
				. make sure there's still enough room for all M3 screws & standoffs
				. change official parts-list to reflect this decision
			. change all stacking headers to occupy a 2x20 horizontal row between the buttons and LEDs, to make the assembly process less fragile
			. double-check that the stacking-headers on the bottom-board and top-board share their corresponding positions
			. move model-number text to bottom-board - if it were still on the top-board, any sort of transparent plexiglas would make it look tacky
				. model-number text should be in the following format:
					. basilisk tine sequencer
					  production run number - production run name
						. e.g.
							. basilisk tine sequencer
							  1 - philosopher's stone
			. reduce boards' size, to fit the results of various changes
			. change all edge-cuts to reflect the rearrangement of ports/standoffs, if applicable
			. double-check that ports aren't competing for space with standoffs
		. bottom-board:
			. reduce board-size to use only the two frontmost pairs of screws?
				. would need to either perfectly compensate for size discrepancies in the backmost standoffs,
					or have two tiny squares of "dummy board" between the backmost standoffs,
					to keep the vertical kerf in check
			. reduce thermal-plate size to accomodate new smaller heatsinks
			. use regular-sized capacitors, in a laying-down position, because people replacing capacitors wouldn't have special tiny ones sitting around
			. socket all capacitors, to futureproof the capacitor-replacement process
			. move shrouded AVR-ISP jack to front-left edge of bottom-board, to prevent any need to muck around with safety-caps
			. SD-card should be on the right side of the front-panel
			. update R-SET resistor's value based on the new diffused LEDs
			. socket the R-SET resistor, to futureproof against any possible changes to the top-board LEDs
			. move POWER-LED to center of bottom-board, and use a high-brightness white LED with a very wide visibility-cone
		. top-board:
			. remove AVR-ISP jack and associated headers from top-board
			. remove POWER-LED from top-board
			. increase distance between LEDs by 1 or 1.5 mm, to allow more wiggle-room in the faceplate's laser-cutting

	. double-check that the text diagrams in button-key.txt accurately reflect the finalized LED-placement

	. buy grounding-bracelets to use while soldering beta prototypes, and while assembling finished units

	. use different-color button-caps on the note-keys, to differentiate between "white notes" and "black notes" like on a piano
	. use different button-cap color for control-row?

	. make sure to use B3F-5050 buttons in finished unit; these have a longer life than B3F-4050 buttons

	. redo all Inkscape files for enclosure, making sure to retake all measurements & repeat the KiCad-to-Inkscape vector paste process
		. make the tabs and slots for the bottom half of the side-panels the correct width for the plexiglass
		. etch labels into the front-panel for each control-row button's PLAY MODE function
			. space the upward-facing side-panel tabs and slots so they don't conflict with the labels' positioning

	. look into sticky rubber spacers for the bottom of the device, to keep its screws from scraping on things and being worn down
		. remember to add these to the master parts-list, however many are used per unit

	. if working with an SD-card distributor: get a copy of the authorization letter that certifies the relationship with the brand they're selling
		. also: get the upstream brand to confirm the distribution relationship

	==== HARDWARE BETA THRESHOLD ====

	. make sure to buy extra SD-cards in case people need replacements

