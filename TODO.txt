

Tine TODO

Software:

	!!! DO NOT CHANGE list:
		-- RECORD TOGGLE's glyph and ERASE-NOTES/ERASE-INVERT-NOTES' chords need to conflict,
		-- so that the file.sync() on ERASE-key-ups don't get skipped when toggling
			-- if any ERASE-key-chord is changed, then the file.sync() call in unassignKey() must also be changed

	. prove I'm not a dipshit: actually finish the project

	. test regular-ERASE
		-- seems to work
	. test REPEAT-ERASE
		-- seems to work
	. test both types of ERASE with strange QUANTIZE-QRESET-OFFSET settings
		--
	. test regular-ERASE-INVERSE
		-- seems to work
	. test ERASE-INVERSE with strange QUANTIZE-QRESET-OFFSET settings
		--

	. test file-load
		-- am doing
		. test sequence-position preservation on load
			--
		. test this with oddly-shaped seqs, and seqs that will definitely wrap
			--
	. test auto-loading of most recent savefile on startup
		--
	. test that the number of the savefile is displayed correctly on startup
		--

	. add "sequence chain" system:
		. chain-data for all seqs should be stored in the song's header
			. change data-format.txt
				-- done
			. change #define statements
				-- done
			. change all routines that handle header data
				-- done
		. each seq's chain-data should be a single byte, with each bit representing a direction (vertical, horizontal, diagonal)
			. these should be:
				. stored in the header of every savefile
					-- ok
				. saved when toggling from record-mode to play-mode
					-- ok
				. kept in local RAM (48 bytes + 1 dummy byte) to prevent lag
					-- ok
		. add commands and glyphs for setting a seq's scatter: 000111 for cardinal, 111000 for diagonal
			. CmdFunc entry
				-- added
			. CmdFunc function in func_cmds.ino
				-- done
				. command keys:
					. 0 1 1 2
					. 0 C C 2
					. 3 C C 4
					. 3 C C 4
					. 5 C C 7
					. 5 6 6 7
					. (numbers = "toggle chain for that direction")
					. (C = "clear this seq's chains")
					-- implemented
			. glyph
				-- needs to be custom-generated in func_gui.ino
			. routines in func_gui.ino:
				. top row
					-- doesn't need it
				. bottom rows
					-- done
		. update sequencing functions:
			-- am doing - done
			. directionality should wrap around the grid, but not be contiguous between pages; each page wraps back onto itself
				-- implemented
			. if a chain-direction byte contains multiple flipped bits, then this represents a random chance of heading in any of the directions
				-- implemented
		. wipe SD-card because the data format has been changed
			-- ok
		. test for basic function
			-- data corruption bug, somehow
			. figure out what's going on
				-- isn't creating any savefiles for some reason
				. figure out why
					-- had the first character of a savefile name as "0" instead of "48" (48 is "0" in ASCII)
					. re-test
						-- loads up correctly now
		. test CHAIN GUI
			-- seems ok
			-- however... the button UI is awkward
			. fix the UI-buttonglyph
				-- fixed: diagonal CHAINs are only toggled by the corner-buttons now
			-- also realized I'd missed a TO_UPDATE call in chainCmd(). fixed it
		. test CHAIN functionality
			-- transfers activity over to another seq even during RECORDMODE. this causes a horrible state-bug
			. fix it
				-- fixed afaict
		. test CHAINs in PLAY MODE
			. when toggling back from RECORDMODE, a seq with a CHAIN will automatically unset itself when the tempo is reset.
				. fix this with a "just left recordmode" flag or something
					--
			. when a CHAIN occurs, the CHAINed seq doesn't activate properly. figure out why
				-- 
		. test whether CUE-OFF-SLICE commands prime a CHAIN-cued seq to start at that SLICE-point, or not
			--

	. when two notes on the same channel with the same pitch are in the SUSTAIN queue, the nested NOTE-OFF does not behave as expected with most synths
	. therefore, a change is necessary:
		. whenever a note is about to be added to the SUSTAIN queue, check whether that chan/pitch combo is in SUSTAIN already.
		. if so: send a NOTE-OFF for that note, remove its SUSTAIN entry (and shift other entries accordingly), and then and only then insert the new SUSTAIN entry

	. bug spotted: DUR-HUMANIZE causes hanging sustains sometimes? figure out why
		--

	. test long-sequence timed cues and beatslicing
		--

	. test REPEAT-SWEEP on:
		. recording regular MIDI commands
			--
		. recording special MIDI commands
			--
		. recording BPM commands
			--

	. re-test all tricky recording mechanisms
		. ERASE WHILE HELD on TRACK 2
		. CLEAR SEQ clears notes in the correct size-window?
		. CLEAR SEQ clears both tracks simultaneously?
		. SEQ POSITION
		. SWITCH RECORDSEQ

	. reassign the RECORD-MODE control-commands to make logical sense (draw a chart to help with this, if necessary)
		. change button-key.txt:
			. RECORD, REPEAT, and TRACK should be conceptually connected
			. CHAN and UPPER-CHAN should be conceptually connected
			. OCTAVE, VELOCITY, DURATION, HUMANIZE, and QUANTIZE should be conceptually connected
		. change KEYTAB array for this
		. change RECORD-MODE GUI routines for this

	. are old notes being knocked out of the sequence by new notes in RECORD-MODE properly?
	. test manual MIDI-OFF commands:
		. keystroke-based
		. recorded
	. test CC/PC/other advanced MIDI commands
		. with REPEAT-SWEEP active
		. with arpeggiation

	. re-test all cue-commands
		. OFF
		. CUE
		. SLICE
		. CUE (with SLICE-offset insertion)
		. CUE OFF
		. PAGE OFF
		. SCATTER (amount)
		. SCATTER UNSET
		. PAGE SCATTER UNSET
		. double-pressed commands, of the same or different types, to check for unexpected behaviors

	. check that all possible edge-case sequences on all pages load correctly, when a new savefile is loaded

	. test MIDI-IN (notes)
		. are notes recorded correctly in RECORD-MODE?
		. are notes recorded only when RECORDNOTES is armed?
		. make sure that notes are not erroneously recorded when PLAY MODE or LOAD MODE is active
			. especially after toggling into LOAD MODE from RECORD MODE with RECORDNOTES armed

	. reinsert a simple MIDI-IN (clock) system?

	. take a survey of all commands in button-key.txt:
		. re-read each command's code, and check the circumstances under which each command works
		. write a tutorial blurb for each command, explaining its function
			. remember to say that ERASE-INVERSE-NOTES only works while both REPEAT and RECORDNOTES are armed

	. check whether sequences function correctly with non-multiple-of-2 lengths, under all RECORD MODE and PLAY MODE processes
	. check that, when a deeper savefile is loaded and is running many complex sequences, there's no extra lag for whatever reason
	. look at all note-recording routines again, to triple-check for any stupid mistakes that would lead to unnecessary wear
	. double-check that the BPM rate is actually accurate at various speeds
	. fill 12 sequences with notes, and check whether lag occurs when connected to a hardware synthesizer
	. does anything catastrophic happen when the SD-card is removed during regular operation?

	==== SOFTWARE BETA THRESHOLD ====

	. when the OFF button is used to wipe the cues from a cued seq, does that cued seq refrain from any activity correctly?
		. if a new cue is set for the same seq, as the seq's first action after such a situation, then does the cue act as expected?

	. do very slow BPMs have the expected tick-length?
	. test whether very fast BPMs have any lag

	. double-check all functionality for sequences on the second-page

	. edge-case testing:
		. does RECORD MODE work right:
			. when the sequence is loaded with SCATTERs and CUEs?
			. in MIDI FOLLOW mode?
			. for sequences with a weird tempo/slice offset from the global cue?

	. survey all TO_UPDATE calls, for superfluous flags

	. add MIDI SONG POSITION POINTER functionality while in CLOCK FOLLOW mode, to orient the global cue-position correctly?

	. double-check that there are no remaining "todo" or "test" comments in the codebase
	. remove "THIS CODE IS UNDER DEVELOPMENT AND DOESN'T DO ANYTHING" from license-statement
	. double-check that everything compiles correctly in the latest version of Arduino
	. test overloading the 8-events-per-tick system
	. test overloading the SUSTAIN system with simultaneous sequencing and notes-from-RECORD-MODE
	. soak-test the physical prototype

	. add a note to tutorials on wear-leveling:
		. extreme repetitive use of note-insertion and CLEAR will lead to comparatively faster card degradation (~10 years, versus the card's natural material lifespan)

	. research how to back-up the contents of the SD-card in a manner that recombines the savefiles without losing their contiguous nature
		-- copy off the disk manually, and then transfer back onto the disk file-by-file using XVI32 to paste their contents into blank files
		-- copy en masse as a disk-image, and then reapply en masse with a disk-imager
		-- copy by simple drag-and-drop, though this might lead to non-contiguous files and cause lag problems?
		. research this third option more

Hardware:

	==== HARDWARE BETA THRESHOLD ATTAINED ====

	. make sure that you order the ATMEGA chips with the proper bootloader fuse config (along with the firmware), or else they will be 8 times too slow and incapable of sending MIDI
		. buy a test-batch that are preprogrammed in such a way, and slot one into a Tine beta unit for testing

	. stress-test both MIDI-INDICATOR LEDs simultaneously, with heavy simultaneous IN/OUT signals (with OUT plugged into two devices), and with the main LED-screen fully illuminated, to make sure the unit isn't prone to brownouts
		. if brownout does occur, then increase the uF value on the 5v regulator-assembly's capacitors

	. if working with an SD-card distributor: get a copy of the authorization letter that certifies the relationship with the brand they're selling
		. also: get the upstream brand to confirm the distribution relationship
	. make sure to buy extra SD-cards in case people need replacements

	. order all parts by copy-pasting part-names from the master parts-list, to avoid mental errors (like missing the inner second "P" in "ATMEGA328P-PU")

	. every unit should have its own serial-number written onto a sticker somewhere on its circuit-board

Packaging:

	. look into services that create custom-printed, custom-sized cardboard boxes
		. any DIY kits will have to be sealed tightly so parts don't escape during transport
			. will just have to use plastic baggies for this probably
				. look into bulk suppliers for anti-static plastic baggies
		. fully-assembled units won't need baggies, but will still need a way to retain loose elements (stickers, manual, et al)

	. look into manual-printing services

	. look into getting "savefile-location templates" printed, so users can write down which of their songs corresponds to which savefile-location

	. look into custom stickers and various other goodies
