
Tegne TODO

Software:

	. test basic UI functionality
		. test toggling into RECORD MODE
		--seems to work
			. make RECORD TOGGLE's glyph more visible when its buttons are simply held
			--did this in RECORD MODE; in PLAY MODE it would disrupt things / be overcomplicated to implement correctly for efficiency reasons
		. shorten all glyphs to 5 rows high, for better visibility
		--done
			. change glyph-related TO_UPDATE calls accordingly
			--updated everything that actually needed an update, which meant leaving a lot of these values the same, as the blank row requires the same update type
		. test all GUI menus in RECORD MODE
		-- they seem to work
		. test all user-controlled var-setting operations in RECORD MODE
		. change second LED-row:
			. leftmost 3 LEDs: binary value: current chorded CTRL-buttons
			. middle 3 LEDs: binary value: current number of active sustains
			. right 2 LEDs: current page
	. timing system / global cue system look broken? fix them
	. test basic recording
		. test note-playing on grid-keyboard
		. test REPEAT button
		. test note-recording itself
	. test basic sequencing
	. test sustain system
	. test all cue-commands
		. OFF
		. CUE
		. SLICE
		. CUE (with SLICE insertion)
		. CUE OFF
		. PAGE OFF
		. SCATTER (amount)
		. SCATTER UNSET
		. PAGE SCATTER UNSET
		. GLOBAL PLAY/STOP
	. test "toggle to next/prev sequence" in RECORD mode
	. test REPEAT commands
	. test MIDI CC commands
	. test file-load
	. test MIDI-IN (notes)
		. uncomment parseRawMidi() in void loop()
	. test MIDI-IN (clock)
		. add a "DO NOT SEND CLOCK SIGNALS" user-flag to the CLOCK MASTER/FOLLOW mechanism
	. add PROGRAM CHANGE functionality (in addition to CONTROL CHANGE)
	. add GUI prompts for:
		. current RECORDSEQ value (RECORD MODE)
	. check whether sequences can actually function with non-multiple-of-2 lengths
	. add SONG POSITION POINTER functionality while in CLOCK FOLLOW mode, to orient the global cue-position correctly?
	. add a command to shift the position of the global cue-point?
	. replace LedControl with LedControl_HW_SPI???
	. remove "THIS CODE IS UNDER DEVELOPMENT AND DOESN'T DO ANYTHING" from license-statement
	. test overloading the 8-events-per-tick system
	. test overloading the SUSTAIN system
	. test overloading the MIDI-IN system
	. soak-test the physical prototype

Hardware:

	. test breadboarded prototype with shared-SPI-line layout (and two digital SPI-select pins), for LedControl_HW_SPI
		. if this works:
			. reroute PCB prototype to reflect the changes
			. update both KiCad and firmware to reflect the changes
			. put 2 extra LEDs in the design on the freed-up pins, and use these to display the current PAGE value
	. remove superfluous POWER-LED & its resistor
	. test MIDI-IO LED circuit with 0.1uF & 1uF capacitors
		. or with 1k/10k resistor from cap+ to GND
		. if it's as bright as the current kind, then: change KiCad schematics & PCBs & Mouser order to reflect this
	. update KiCad file:
		. bottom-board:
			.use regular-sized capacitors, in a laying-down position, because people replacing capacitors wouldn't have special tiny ones sitting around
				. update Mouser cart to reflect this
			. update R-SET resistor's value based on the new diffused LEDs
				. update Mouser cart to reflect this
		. top-board:
			. move AVR-ISP programming header as close to the back of the unit as possible, to not interfere with new diffused-LED design
			. move MIDI-IN LED to left side
			. move POWER LED to right side

