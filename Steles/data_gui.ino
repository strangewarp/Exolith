
// Long glyph: logo to display on startup
const byte LOGO[] PROGMEM = {
	B01111110, B01111110, B01000110, B01111110,
	B01111110, B01111110, B01100110, B01111110,
	B00011000, B00011000, B01110110, B01100000,
	B00011000, B00011000, B01111110, B01111100,
	B00011000, B00011000, B01101110, B01100000,
	B00011000, B01111110, B01100110, B01111110,
	B00011000, B01111110, B01100010, B01111110
};

// Glyph: BASENOTE
const byte GLYPH_BASENOTE[] PROGMEM = {B00000000, B11101001, B10101101, B11001111, B10101011, B11101001};

// Glyph: BPM
const byte GLYPH_BPM[] PROGMEM = {B00000000, B01010001, B01011011, B01010101, B11010001, B11010001};

// Glyph: CHAN
const byte GLYPH_CHAN[] PROGMEM = {B00000000, B11101000, B10101000, B10001100, B10101010, B11101010};

// Glyph: CLOCK-MASTER
const byte GLYPH_CLOCKMASTER[] PROGMEM = {B00000000, B11101000, B10101000, B10001010, B10101100, B11101010};

// Glyph: CONTROL-CHANGE
const byte GLYPH_CONTROLCHANGE[] PROGMEM = {B00000000, B11101110, B10101010, B10001000, B10101010, B11101110};

// Glyph: DURATION
const byte GLYPH_DURATION[] PROGMEM = {B00000000, B11000000, B10100000, B10101110, B10101000, B11001000};

// Glyph: ERASING
const byte GLYPH_ERASE[] PROGMEM = {B00000000, B11101010, B10001010, B11101010, B10000000, B11101010};

// Glyph: HUMANIZE
const byte GLYPH_HUMANIZE[] PROGMEM = {B00000000, B10100000, B10100000, B11101010, B10101010, B10101110};

// Glyph: LOAD
const byte GLYPH_LOAD[] PROGMEM = {B00000000, B10001010, B10001010, B10001010, B10000000, B11101010};

// Glyph: OCTAVE
const byte GLYPH_OCTAVE[] PROGMEM = {B00000000, B11100000, B10100000, B10101110, B10101000, B11101110};

// Glyph: QUANTIZE
const byte GLYPH_QUANTIZE[] PROGMEM = {B00000000, B11100000, B10100000, B10100101, B10100101, B11110111};

// Glyph: RECORD
const byte GLYPH_RECORD[] PROGMEM = {B11100000, B10010000, B11100000, B10010000, B10010000, B10010000};

// Glyph: REPEAT
const byte GLYPH_REPEAT[] PROGMEM = {B01000000, B01000000, B01000000, B01000000, B11000000, B11000000};

// Glyph: REPEAT (ARMED)
const byte GLYPH_REPEAT_ARMED[] PROGMEM = {B01000000, B01001000, B01001001, B01001001, B11011011, B11011011};

// Glyph: SWITCH RECORDING-SEQUENCE
const byte GLYPH_RSWITCH[] PROGMEM = {B00000000, B11101110, B10101000, B11000100, B10100010, B10101110};

// Glyph: SD-CARD
const byte GLYPH_SD[] PROGMEM = {B00000000, B11101100, B10001010, B01001010, B00101010, B11101100};

// Glyph: SEQ-SIZE
const byte GLYPH_SIZE[] PROGMEM = {B00000000, B11101110, B10000010, B01000100, B00101000, B11101110};

// Glyph: VELO
const byte GLYPH_VELO[] PROGMEM = {B00000000, B10010000, B10010000, B01010000, B00110000, B00010000};

// Interval button glyphs: RANDOM, DOWN, UP
const byte GLYPH_RANDOM[] PROGMEM = {B11110000, B10010000, B00110000, B00100000, B00000000, B00100000};
const byte GLYPH_DOWN[] PROGMEM = {B00000000, B00000000, B00000110, B00000110, B00001111, B00000110};
const byte GLYPH_UP[] PROGMEM = {B00000110, B00001111, B00000110, B00000110, B00000000, B00000000};

// Number multiglyph: holds all numbers used for file-page display (0-6)
const byte MULTIGLYPH_NUMBERS[] PROGMEM = {
	B00111100, B00100100, B00100100, B00100100, B00100100, B00111100, // 0
	B00001000, B00011000, B00001000, B00001000, B00001000, B00001000, // 1
	B00111100, B00100100, B00001000, B00010000, B00010000, B00111100, // 2
	B00111100, B00000100, B00011100, B00000100, B00100100, B00111100, // 3
	B00100100, B00100100, B00111100, B00000100, B00000100, B00000100, // 4
	B00111100, B00100000, B00111100, B00000100, B00100100, B00111100, // 5
	B00111100, B00100000, B00111100, B00100100, B00100100, B00111100  // 6
};

